version: 2.1
jobs:
  build:
    docker:
      - image: circleci/rust

    # https://github.com/rust-lang/rust/issues/33465
    # https://www.reddit.com/r/rust/comments/6rxoty/tutorial_cross_compiling_from_linux_for_osx/
    steps:
      - checkout
      - run: sudo apt-get install -y mingw-w64
      - run: sudo apt-get install -y clang
      - run: rustup target add x86_64-pc-windows-gnu
      - run: rustup target add x86_64-unknown-linux-gnu
      - run: rustup target add x86_64-apple-darwin

      - run: |
          git clone https://github.com/tpoechtrager/osxcross
          cd osxcross
          wget https://s3.dockerproject.org/darwin/v2/MacOSX10.11.sdk.tar.xz
          pwd
          ls
          mv MacOSX10.11.sdk.tar.xz tarballs/
          sed -i -e 's|-march=native||g' build_clang.sh wrapper/build.sh
          UNATTENDED=yes OSX_VERSION_MIN=10.7 ./build.sh
          sudo mkdir -p /usr/local/osx-ndk-x86
          sudo mv target/* /usr/local/osx-ndk-x86

      - run: cargo rustc --release --target=x86_64-pc-windows-gnu -- -C linker=x86_64-w64-mingw32-gcc
      - run: cargo rustc --release --target=x86_64-unknown-linux-gnu
      - run: |
          export PATH=/usr/local/osx-ndk-x86/bin:$PATH
          export PKG_CONFIG_ALLOW_CROSS=1
          cargo rustc --release --target=x86_64-apple-darwin -- -C linker=x86_64-apple-darwin15-cc -C ar=x86_64-apple-darwin15-ar


      - run: ls target
      - run:
          name: Parse LambdaCore version
          command: cat Cargo.toml | head -n 3 | tail -n 1 | cut -c 12- | rev | cut -c 2- | rev > target/VERSION
      - persist_to_workspace:
          root: target
          paths:
            - ./*

  # https://circleci.com/blog/exploring-domain-driven-design-at-circleci/
  # Publish only on tag
  publish:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - attach_workspace:
          at: target
      - run: ls target
      - run: ls target/x86_64-pc-windows-gnu
      - run: mkdir target/RELEASE
      #- run: cp target/x86_64-pc-windows-gnu/release/lambda_core.exe target/RELEASE/
      #- run: cp target/x86_64-unknown-linux-gnu/release/lambda_core target/RELEASE/
      - run: mv target/x86_64-pc-windows-gnu/release/lambda_core.exe target/RELEASE/lambda_core-x86_64-win32.exe
      - run: mv target/x86_64-unknown-linux-gnu/release/lambda_core target/RELEASE/lambda_core-x86_64-linux
      - run: mv target/x86_64-apple-darwin/release/lambda_core target/RELEASE/lambda_core-x86_64-macos
      - run:
          name: "Publish Windows Release on GitHub"
          command: |
            VERSION=v$(cat target/VERSION)
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} target/RELEASE


# Build for Windows, MacOS, and Linux
# Test using VMs or Docker containers for all 3 platforms
# Publish

workflows:
  version: 2
  main:
    jobs:
      - build:
          filters:  # required since `deploy` has tag filters AND requires `build`
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - publish:
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
