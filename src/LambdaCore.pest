// Make sure to generally ignore whitespace
//WHITESPACE = _{ " " | "\t" | "\r\n" | "\r" | "\n" }
WHITESPACE = _{ " " | "\t" }

// Programs are constructed from one or more functions
Program = { SOI ~ (Quote | BackTick | LineComment | Function | NewLine)* ~ EOI }

NewLine = {
	NEWLINE
}

BackTick = {
	"`"
}

Comma = {
	","
}

Quote = {
	"'" ~ (Value | Identifier | Function | Quote)
}

LineComment = @{ "::" ~ LineCommentContents* }
	LineCommentContents = { !(NEWLINE) ~ ANY }

// It is assumed that you cannot call a value (e.g.: `(True)` or `(3.14)`)
Function = {
	"(" ~
	Identifier ~
	(Comma | Quote | BackTick | Value | Identifier | Function | LineComment | NEWLINE)* ~
	")"
}

/*
Important(pbz): Value must preceed Identifier since Identifier is basically a
catch-all. (e.g. maches `|`, `*`, `asdf`, `123`)
*/
Identifier = @{
	(!("," | "'" | "`" | ":" | "(" | ")" | "[" | "]" | "\"" | "\\" | NEWLINE | WHITESPACE) ~ ANY)+
}

Value = _{ Array | String | Number | Boolean | Null }

Array = { "[" ~ (Comma | Quote | BackTick | LineComment | Value | Identifier | Function | NEWLINE)* ~ "]" }

Boolean = { "True" | "False" }

Null = { "Null" }

String = ${ "\"" ~ StringContents ~ "\"" }
	StringContents = _{ Character* }
		Character = _{
			!("\"" | "\\") ~ ANY
			| "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t")
			| "\\" ~ ("u" ~ ASCII_HEX_DIGIT{4})
		}

Number = @{
    "-"?
    ~ ("0" | ASCII_NONZERO_DIGIT ~ ASCII_DIGIT*)
    ~ ("." ~ ASCII_DIGIT*)?
    ~ (^"e" ~ ("+" | "-")? ~ ASCII_DIGIT+)?
}
